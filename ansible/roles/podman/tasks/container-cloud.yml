---
- name: create required cloud volumes
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ podman_subuid.stdout }}"
    group: "{{ podman_subuid.stdout }}"
    mode: 0755
  notify: restorecon podman
  loop:
    - "{{ cloud_path }}/apps"
    - "{{ cloud_path }}/config"
    - "{{ cloud_path }}/data"
    - "{{ cloud_path }}/mysql"

- name: unshare chown the nextcloud volumes
  become: true
  become_user: "{{ podman_user }}"
  changed_when: false
  ansible.builtin.command: |
    podman unshare chown -R 33:33 {{ cloud_path }}/apps {{ cloud_path }}/data {{ cloud_path}}/config

- name: get user/group id from unshare
  become: true
  ansible.builtin.stat:
    path: "{{ cloud_path }}/data"
  register: cloud_owner

- name: mount cloud cifs
  become: true
  ansible.posix.mount:
    src: "{{ cloud_cifs_src }}"
    path: "{{ cloud_path }}/data"
    fstype: cifs
    opts: "username=cloud,password={{ cloud_cifs_pass }},uid={{ cloud_owner.stat.uid }},gid={{ cloud_owner.stat.uid }},file_mode=0770,dir_mode=0770"
    state: mounted

- name: flush handlers
  ansible.builtin.meta: flush_handlers

- import_tasks: podman/podman-check.yml
  vars:
    container_name: cloud-db
    container_image: "{{ db_image }}"

- name: create cloud-db container
  become: true
  become_user: "{{ podman_user }}"
  containers.podman.podman_container:
    name: cloud-db
    image: "{{ db_image }}"
    restart_policy: on-failure:3
    log_driver: journald
    network:
      - shared
    env:
      MYSQL_ROOT_PASSWORD: "{{ cloud_db_root_pass }}"
      MYSQL_DATABASE: cloud
      MYSQL_PASSWORD: "{{ cloud_db_pass }}"
      MYSQL_USER: cloud
    volumes:
      - "{{ cloud_path }}/mysql:/var/lib/mysql"

- name: create systemd startup job for cloud-db
  include_tasks: podman/systemd-generate.yml
  vars:
    container_name: cloud-db

- import_tasks: podman/podman-check.yml
  vars:
    container_name: cloud
    container_image: "{{ image }}"

- name: create cloud container
  become: true
  become_user: "{{ podman_user }}"
  containers.podman.podman_container:
    name: cloud
    image: "{{ image }}"
    restart_policy: on-failure:3
    log_driver: journald
    network:
      - shared
    env:
      MYSQL_PASSWORD: "{{ cloud_db_pass }}"
      MYSQL_DATABASE: cloud
      MYSQL_HOST: cloud-db
      MYSQL_USER: cloud
    volumes:
      - "{{ cloud_path }}/apps:/var/www/html/custom_apps"
      - "{{ cloud_path }}/data:/var/www/html/data"
      - "{{ cloud_path }}/config:/var/www/html/config"
    ports:
      - "8089:80"

- name: create systemd startup job for cloud
  include_tasks: podman/systemd-generate.yml
  vars:
    container_name: cloud
